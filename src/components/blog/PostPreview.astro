---
import type { HTMLTag, Polymorphic } from "astro/types";
import type { CollectionEntry } from "astro:content";
import FormattedDate from "../FormattedDate.astro";

type Props<Tag extends HTMLTag> = Polymorphic<{ as: Tag }> & {
	post: CollectionEntry<"post">;
	withDesc?: boolean;
};

const { as: Tag = "div", post, withDesc = false } = Astro.props;
const postDate = post.data.updatedDate ?? post.data.publishDate;
---

<Tag>
	{post.data.draft && <span class="text-red-500">(Draft) </span>}
	<a class="cactus-link" data-astro-prefetch href={`/posts/${post.slug}/`}>
		<span class="text-2xl uppercase">{post.data.title}</span>
		{
			withDesc && (
				<>
					<q class="line-clamp-3 block ">{post.data.description}</q>
					<span class="italic text-accent">Learn more â†’</span>
				</>
			)
		}
	</a>
	<FormattedDate
		class="min-w-[120px] ps-3 text-sm text-gray-600 dark:text-gray-400"
		date={postDate}
	/>
</Tag>
